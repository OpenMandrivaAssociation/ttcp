diff -up ttcp-1.12/ttcp.c.gnu ttcp-1.12/ttcp.c
--- ttcp-1.12/ttcp.c.gnu	2008-02-14 09:32:04.000000000 +0100
+++ ttcp-1.12/ttcp.c	2008-02-14 09:47:12.000000000 +0100
@@ -71,6 +71,7 @@ static char RCSid[] = "ttcp.c $Revision:
 static char * useRCSid = ( RCSid + ( (char *)&useRCSid - (char *)&useRCSid ) );
 #endif
 
+#define _GNU_SOURCE
 #include <sys/types.h>
 #include <sys/socket.h>
 #include <sys/time.h>		/* struct timeval */
@@ -94,7 +95,7 @@ struct addrinfo hints, *res, *res0;
 struct ipv6_mreq mreq6;
 struct ip_mreq mreq;
 
-size_t fromlen;
+socklen_t fromlen;
 int fd;				/* fd of network socket */
 
 int buflen = 8 * 1024;		/* length of buffer */
@@ -341,7 +342,7 @@ main(int argc, char **argv)
 	if ((buf = (char *)malloc(buflen+bufalign)) == (char *)NULL)
 		err("malloc");
 	if (bufalign != 0)
-		buf +=(bufalign - ((int)buf % bufalign) + bufoffset) % bufalign;
+		buf +=(bufalign - ((size_t)buf % bufalign) + bufoffset) % bufalign;
 
 	if (trans) {
 		fprintf(stderr, "ttcp-t: buflen=%d, nbuf=%d, align=%d/%d, port=%s",
@@ -470,7 +471,7 @@ main(int argc, char **argv)
 		{ 
 		  struct sockaddr_storage peer;
 		  char addr_buf[NI_MAXHOST];
-		  size_t peerlen = sizeof(peer);
+		  socklen_t peerlen = sizeof(peer);
 		  
 		  if (getpeername(fd, (struct sockaddr*) &peer, &peerlen) < 0)
 			err("getpeername");
@@ -718,7 +719,7 @@ prusage(register struct rusage *r0, regi
 
 		case 'W':
 			i = r1->ru_nswap - r0->ru_nswap;
-			sprintf(outp, "%ld", i);
+			sprintf(outp, "%d", i);
 			END(outp);
 			break;
 
@@ -821,7 +822,7 @@ int
 Nread(int fd, void *buf, int count)
 {
 	struct sockaddr_in from;
-	size_t len = sizeof(from);
+	socklen_t len = sizeof(from);
 	register int cnt;
 	if (udp) {
 		cnt = recvfrom(fd, buf, count, 0, (struct sockaddr *)&from, &len);
